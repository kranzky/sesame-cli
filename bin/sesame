#!/usr/bin/env ruby

require 'sesame'
require 'slop'

opts =
  begin
    Slop.parse do |o|
      o.string '-p', '--path', 'the path to the sesame cave; overrides $SESAME_PATH and .sesamerc'
      o.string '-s', '--service', 'the name of the service (e.g. Twitter)'
      o.string '-u', '--user', 'the username for the given service (e.g. user@test.com)'
      o.integer '-o', '--offset', 'the password index for the service and username (defaults to 0)'
      o.bool '-e', '--echo', 'display passwords in plain text instead of adding to the clipboard'
      o.bool '-i', '--interactive', 'launch an interactive cli, allowing commands to be issued'
      o.bool '-r', '--reconstruct', 'reconstruct a sesame cave from an existing passphrase'
      o.bool '-x', '--expunge', 'remove the temporary lock; the full passphrase will be required'
      o.string '-c', '--command', 'the command to execute; one of: list, get, add, next, delete'
      o.bool '-l', '--list', 'show all services and usernames'
      o.bool '-a', '--add', 'add a new service and username'
      o.bool '-g', '--get', 'get the current password for an existing service and username'
      o.bool '-n', '--next', 'generate a new password for an existing service and username'
      o.bool '-d', '--delete', 'remove an existing service and username'
      o.bool '-q', '--quiet', 'silence the jinn'
      o.on '-v', '--version', 'print the version and exit' do
        say(Sesame::Cave.VERSION)
        exit
      end
      o.on '-h', '--help', 'all of that up there ^' do
        say(o)
        exit
      end
    end
  rescue Slop::Error => e
    say(e.message + " (try --help)")
    exit 1
  end
if opts.arguments.count > 0
  say("extraneous arguments: #{opts.arguments.join(' ')} (try --help)")
  exit 1
end

Sesame::Jinn.new(opts).process!
